class PQueue:
    def __init__(self):
        self.heap = [0]

    def push(self, num):
        self.heap[0] += 1
        self.heap.append(num)
        self.swim(self.heap[0])

    def pop(self):
        if self.heap[0] == 0:
            print("empty!")
        else:
            i = self.heap[0]
            data = self.heap[1]
            self.heap[1] = self.heap[i]
            del self.heap[i]
            print(data)
            self.heap[0] -= 1
            self.sink(1)

    def swim(self, i):
        j = i // 2
        while i > 1 and self.heap[i] < self.heap[i]:
            self.heap[i], self.heap[j] = self.heap[j], self.heap[i]
            i = j
            j = i // 2

    def sink(self, i):
        last = self.heap[0]
        j = i * 2 + 1
        while j <= last:
            if self.heap[j] > self.heap[j-1]:
                j -= 1
            if self.heap[i] > self.heap[j]:
                self.heap[i], self.heap[j] = self.heap[j], self.heap[i]
                i = j
                j = i * 2 + 1
            else:
                break
        j -= 1
        if j <= last:
            if self.heap[i] > self.heap[j]:
                self.heap[i], self.heap[j] = self.heap[j], self.heap[i]
