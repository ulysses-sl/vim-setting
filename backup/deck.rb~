require_relative 'card'

# Represents a deck of playing cards.
class Deck
  # Returns an array of all 52 playing cards.
  def self.all_cards
      Card::SUIT_STRINGS.keys.product(Card::VALUE_STRINGS.keys).map{|a,b| Card.new(a,b)}
  end

  def initialize(cards = Deck.all_cards)
      @cards = cards
  end

  # Returns the number of cards in the deck.
  def count
      @cards.size
  end

  # Takes `n` cards from the top of the deck.
  def take(n)
      if n > @cards.size
        raise "not enough cards"
      end
      rv = []
      n.times { rv << @cards.shift}
      rv
  end

  # Returns an array of cards to the bottom of the deck.
  def return(cards)
      @cards.concat(cards)
  end
end
